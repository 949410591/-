安装
	sudo apt-get install git

初次运行git前的配置
	git config
		Git 自带一个 git config 的工具来帮助设置控制 Git 外观和行为的配置变量。 
		这些变量存储在三个不同的位置：
		1. /etc/gitconfig 文件: 包含系统上每一个用户及他们仓库的通用配置。 如果使用带有 --system 选项的
		git config 时，它会从此文件读写配置变量。
		2. ~/.gitconfig 或 ~/.config/git/config 文件：只针对当前用户。 可以传递 --global 选项让 Git
		读写此文件。
		17
		3. 当前使用仓库的 Git 目录中的 config 文件（就是 .git/config）：针对该仓库。
		
		每一个级别覆盖上一级别的配置，所以 .git/config 的配置变量会覆盖 /etc/gitconfig 中的配置变量
	
		用户信息（配制一次就行）
			$ git config --global user.name "用户名"
			$ git config --global user.email johndoe@example.com
	
获得git仓库
	git init 初始化仓库
		在文件夹下创建.git文件夹，这里包含一个git仓库所需要的所有东西
		创建目录 cd目录 git init
		git init 目录名
	
	git clone	克隆现有的仓库
		git clone [url] [other name]

记录每一次更新到仓库
	检查当前仓库状态
		git status	检查当前仓库状态
	
	跟踪新文件
		git add [filename or path]
			命令使用文件或目录的路径作为参数；如果参数是目录的路径，该
			命令将递归地跟踪该目录下的所有文件。
	
	提交文件
		git commit -m "更新说明"
	
	查看版本记录
		git log
		
	查看每个版本具体修改了什么
		git log -p
	
	只显示一行
		git log --oneline
		
	返回版本
		返回指定版本
			git checkout conmmit码(git log 版本定位commit码)
			git checkout tag
		
		返回上一个版本
			git checkout -
	
标签
	git tag -a 标签名 -m "备注"
		标签打在最近的提交上
	
	指定节点打标签
		git tag -a 标签名 -m "备注" commit码
	
	查看某个标签的详细信息
		git show 标签名

分支
	默认分支
		master
		这个是git默认的主分支
	
	创建分支
		git branch rich
	
	创建并切换分支
		git checkout -b 分支名

	合并分支
		git merge 分支名

提交给远程仓库
	添加远程仓库
		git remote add 远程名字 远程地址
	
	列出所有远程仓库
		git remote -v
		详细push 和 fetch 地址
	
	上传代码
		git push  -u 远程名 分支名

更新仓库
	获取远程更新
		git pull  = git fetch ；git merge

	
		
	
	
	
	

	

			