link css
	引入
		在<head>标签内
		<link rel="stylesheet" href="/css/master.css">

	css文件内
		import url(test.css)
		
		优先级最高在最后加个！important
			p
			{
			  color: red !important
			}
		
	内联 次高级
		<p style="color: green">fsadjflksadjflskadfjsldkaf</p>
	
	important（css文件内） > 内联（元素内部） > 内部样式表（在head标签内的style） > 外部样式表 link > 浏览器缺省设置

继承
	子元素会从父元素继承属性

派生选择器
	a b {xxxxx:xxxxx}
	为了清楚的显示网页结构
	选择a标签下面的b标签

元素选择器
	只会选择元素进行样式规划
	
		h1,h2,h3,h4
		{
		  color: grey;
		  background: black

		}

		h1
		{
		  border: 3px solid green

		}

		h2
		{
		  border: 2px solid yellow;
		}

类选择器 class 与 id选择器
	标签内class属性定义 类
		css里用.classname 来选择
	标签内id定义名，独一无二的
		css里用#idname 来选择
		
	html里
		<!DOCTYPE html>
		<html lang="en" dir="ltr">
		  <head>
			<meta charset="utf-8">
			<title></title>
			<link rel="stylesheet" href="1.css">
		  </head>
		  <body>
			<div class="red bold solid">
			  A
			</div>
			<div class="red bold">
			  B
			</div>
			<p class="red">C
			  <br>
			  <span class="bold">999</span>
			</p>
			<p class="green">D</p>
			<p id="loge">loge</p>
		  </body>
		</html>
		

			
	css里
		.red #只是red类
		{
		  color: red;

		}
		.green #只是green类
		{
		  color: green;
		}

		.bold #只是bold类
		{
		  font-size: 50;
		}

		.red.bold #同时是red和bold类
		{
		  border: 1px solid red;

		}
		.red .bold   #red元素下的bold类
		{
		  font-size: 30

		}
		#loge
		{
		  color: grey;
		  font-size: 60
		}
		td.fancy  #是td标签也是fancy类
		{
			font-size:10px;
		}

属性选择器
	[href] 选择有href属性的元素
	[type = "x"]选择type=x的元素
	[type *= "xx"]选择type包含有xx的元素
	[type ^= "xx"]选择type开头是xx的元素
	[type $= "xx"]选择type结尾是xx的元素
	

	后面的样式会把前面的样式覆盖，如果是加载到一个元素上时

后代选择器
	.a .c a类里面所有的c类 
	所有的后代都选择

子元素选择器
	h1 > em 
	选择h1元素的子元素所有的em元素

相邻选择器（兄弟选择器）
	.a + div #选接下来这个兄弟
	{
	  background: rgba(255, 0, 0, 0.3);
	}

	.a ~ div #选接下来所有的兄弟
	{
	  background: rgba(0, 255, 0, 0.3);
	}
	这个只会向下选择元素不会向上选择

伪类选择器
	没用访问过的链接
	a:link
	{
	  color: blue;
	}
	
	访问过的链接
	a:visited
	{
	  color: grey;
	}
	
	悬停时
	button:hover， #几乎所有的元素都有这个
	a：hover
	{
	  background: #888;
	}
	
	点击时
	button:active
	{
	  background: 333;
	  color: #fff;
	}
	
	聚焦时
	光标在输入框时
	input:focus
	{
	  outline: none;
	  background: #aaa

	}

	https://www.w3school.com.cn/css/css_pseudo_classes.asp
	属性	描述				CSS
	:active	向被激活的元素添加样式。		1
	:focus	向拥有键盘输入焦点的元素添加样式。	2
	:hover	当鼠标悬浮在元素上方时，向元素添加样式。1
	:link	向未被访问的链接添加样式。		1
	:visited	向已被访问的链接添加样式。		1
	:first-child	向元素的第一个子元素添加样式。	2
	:lang	向带有指定 lang 属性的元素添加样式。	2
	
伪元素选择器、
	p标签内容的一个字符
	p::first-letter
	{
	  font-size: 50px
	}

	help类里内容最后添加[?]
	.help:after
	{
	  content: "[?]";
	  color: blue;
	}
	
	a标签的内容前面加*
	a::before
	{
	  content: "*";
	  color: red;


	}
	
	div 标签里的第一个p标签 内容
	div p:first-child
	{
	  color: blue

	}
	
	div 标签里的n个p标签 的内容
	div p:nth-child(2)
	{
	  color: red

	}
	：和：：一回事
	：支持的比较早，在比较老的浏览器都支持：

	
	属性		描述				CSS
	:first-letter	向文本的第一个字母添加特殊样式。	1
	:first-line		向文本的首行添加特殊样式。		1
	:before		在元素之前添加内容。		2
	:after		在元素之后添加内容。		2
	

选择器的权重
	权重的意思是在显示的时候谁更强，谁更碾压对方
	后来居上是针对同一个段位的来说
	
	权重顺序
		style	ID	类选择器/属性选择器/伪类选择器	元素选择器
		  0      0               0                    0	

样式
	背景属性
	
		属性 					用途
		background 				在一个声明中设置所有的背景属性
		background-attachment 	设置背景图像是否固定或者随着页面的其余部分滚动
		background-color 		设置元素的背景颜色
		background-image 		设置元素的背景图像
		background-position 	设置背景图像的开始位置
		background-repeat 		设置是否及如何重复背景图像
		background-clip 		规定背景的绘制区域
		background-origin 		规定背景图片的定位区域
		background-size 		规定背景图片的尺寸
		
		背景色
			p {background-color: gray; padding: 20px;}
		
		背景图像
			body {background-image: url(/i/eg_bg_04.gif);}
		
		背景重复
			body
			  { 
			  background-image: url(/i/eg_bg_03.gif);
			  background-repeat: repeat-y;
			  }
			  重复不重复都是你说的算
		
		背景定位
		
			body
			  { 
				background-image:url('/i/eg_bg_03.gif');
				background-repeat:no-repeat;
				background-position:center;
			  }
			 是居中还是靠左？
			 
			值的分类
				关键字
					单一关键字 	等价的关键字
					center 		center center
					top 		top center 或 center top
					bottom 		bottom center 或 center bottom
					right 		right center 或 center right
					left 		left center 或 center left
					
				百分比
					background-position:66% 33%;
					0% 0% 图片在左上角
					100% 100% 图片在右下角
					就相当于xy坐标而已
					
				长度
					 background-position:50px 100px;
					 与百分比类似
		背景关联
			如果文档比较长，那么当文档向下滚动时，
			背景图像也会随之滚动。当文档滚动到超过图像的位置时，图像就会消失。

			您可以通过 background-attachment 
			属性防止这种滚动。通过这个属性，可以声明图像相对于可视区是固定的（fixed），
			因此不会受到滚动的影响：
				  background-attachment:fixed

	字体属性
		属性 				用途
		font 				在一个声明中设置所有字体属性
		font-family 		规定文本的字体系列
		font-size 			规定文本的字体尺寸
		font-weight 		规定字的粗细
		color 				设置文本的颜色
		direction 			规定文本的书写方向
		line-height 		设置行高
		text-align 			规定文本的水平对齐方式
		text-decoration 	规定添加到文本的装饰效果
		text-indent 		规定文本块首行的缩进
		
		
		font-family  字体  
			有两个值，先找第一个，有忽略掉后面的参数。
			如果每个值都没有，就使用默认字体。
			p
			{
			  font-family: "微软雅黑","Microsoft Yahei";
			}
		
		font-weight  字重    粗细
			范围： 100-900
		
		font-size	字体大小
			10px 像素大小
			100% 原来字体大小的百分比
		
		text-align 对齐方式
			justify
				向两端对齐，最后一行不会对齐
		
		line-height 行高
			10px
			1
		
		text-decoration 文字装饰
			underline
			overline
			line-through 删除线
			none 无
	尺寸
		属性 		用途
		height 		设置元素高度
		max-height 	设置元素的最大高度
		max-width 	设置元素的最大宽度
		min-height 	设置元素的最小高度
		min-width 	设置元素的最小宽度
		width 		设置元素宽度
		
	外边距属性

		属性 			用途
		margin 			在一个声明中设置所有外边距属性
		margin-bottom 	设置元素的下外边距
		margin-left 	设置元素的左外边距
		margin-right 	设置元素的右外边距
		margin-top 		设置元素的上外边距

	边框属性

		属性 			用途
		border 			在一个声明中设置所有的边框属性
		border-bottom 	在一个声明中设置所有的下边框属性
		border-left 	在一个声明中设置所有的左边框属性
		border-right 	在一个声明中设置所有的右边框属性
		border-top 		在一个声明中设置所有的上边框属性

	内边距属性

		属性 			用途
		padding 		在一个声明中设置所有内边距属性
		padding-bottom 	设置元素的下内边距
		padding-left 	设置元素的左内边距
		padding-right 	设置元素的右内边距
		padding-top 	设置元素的上内边距

	定位属性

		属性 		用途
		bottom 		设置定位元素下外边距边界与其包含块下边界之间的偏移
		clear 		规定元素的哪一侧不允许其他浮动元素
		display 	规定元素应该生成的框的类型
		float 		规定框是否应该浮动
		left 		设置定位元素左外边距边界与其包含块左边界之间的偏移
		overflow 	规定当内容溢出元素框时发生的事情
		position 	规定元素的定位类型
		right 		设置定位元素右外边距边界与其包含块右边界之间的偏移
		top 		设置定位元素的上外边距边界与其包含块上边界之间的偏移
		visibility 	规定元素是否可见
		
	display
		白边的解决方法
			body
			{
			  margin: 0;

			}
		
		display: block;
			block 占母元素的整宽
			霸道总裁
			天下地上唯我独尊
			自己占一行
			
		内容有往左上角的趋势
		
		display: inline;
			行内元素
			可以接内容
		
		display: inline-block;
			行内块元素
			具有两种元素的性质
		
		行内元素和行内块元素的区别
			<div>
			  Lorem
			  <div style="padding:10px"class="inline">#改变的只有左右的间隔，上下间隔不变
				行内元素
			  </div>
			  ipsum
			  <div class="inline-block" style="padding:10px">#上下左右的间隔都变
				行内块元素
			</div>

		 display: none; 
			不显示

框
	包含在<body>在内的所有元素都是框
		外边距在实际使用中，当两个垂直外边距相遇时，它们会合并成一个外边距。合并后的外边距的高度等于两个发生合并外边距的高度中的较大者
	


	
	
	
	
	
	
